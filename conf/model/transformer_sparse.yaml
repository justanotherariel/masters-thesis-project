defaults:
  - pipeline/default@_here_
  - _self_

env_sys:
  steps:
    - _target_: src.modules.environment.minigrid_builder.MinigridBuilder
      # environment: MiniGrid-Empty-5x5-v0
      # environment: MiniGrid-Fetch-8x8-N3-v0
      # environment: MiniGrid-LavaCrossingS9N3-v0
      environment: MiniGrid-SimpleCrossingS9N3-v0
      # environment: MiniGrid-LavaCrossingS11N5-v0
      # environment: MiniGrid-SimpleCrossingS11N5-v0
      # environment: MiniGrid-MultiRoom-N4-S5-v0

    - _target_: src.modules.environment.minigrid_sampler_exhaustive.MinigridSamplerExhaustive
      train_envs: 4
      train_keep_perc: 0.2
      validation_envs: 10

    # - _target_: src.modules.environment.minigrid_sampler_random.MinigridSamplerRandom
    #   num_samples: 2048
    #   num_samples_per_env: 20
    #   perc_train: 0.8

    # - _target_: src.modules.environment.minigrid_sampler_exhaustive_split.MinigridSamplerExhaustiveSplit
    #   envs: 10
    #   perc_train: 0.1

train_sys:
  steps:
    - _target_: src.modules.training.torch_trainer.TorchTrainer

      epochs: 4_000
      batch_size: 2048

      load_all_batches_to_gpu: true
      validate_every_x_epochs: 5
      to_predict: ALL # NONE | TRAIN | VALIDATION | TEST | ALL
      discrete: true

      model:
        _target_: src.modules.training.models.base.MinigridModel
        model_cls:
          _partial_: true
          _target_: src.modules.training.models.transformer.sparse.CombAction
          # _target_: src.modules.training.models.transformer.sparse_zero_self.CombAction
        d_model: 128
        n_heads: 4
        n_layers: 3
        d_ff: 128
        drop_prob: 0.15
        threshold: 0.1

      loss:
        _target_: src.modules.training.loss.MinigridLoss
        obs_loss_weight: 0.8
        reward_loss_weight: 0.2
        discrete_loss_fn:
          # _target_: src.modules.training.loss.CELoss
          _target_: src.modules.training.loss.CEFocalLoss
        eta_loss_fn:
          _target_: src.modules.training.loss.EtaL1Loss
          # _target_: src.modules.training.loss.EtaL2Loss
          weight: 0.01

      accuracy:
        _target_: src.modules.training.accuracy.MinigridAccuracy

      # early_stopping:
      #   enable: true
      #   start_epoch: 1500
      #   patience: 500
      #   metric: ["VALIDATION", "Transition Accuracy"]
      #   metric_mode: max
      #   metric_min_delta: 0.02
      #   revert_to_best_model: true

      model_storage_conf:
        save_model_to_disk: true
        save_model_to_wandb: true
        save_checkpoints_to_disk: false
        save_checkpoints_keep_every_x_epochs: 50
        resume_training_from_checkpoint: false
        save_directory: !!python/object/apply:pathlib.PosixPath
          - 'tm/'

      dataloader_conf:
        num_workers: 8
        prefetch_factor: 4
        persistent_workers: true

      optimizer:
        _partial_: true
        _target_: torch.optim.Adafactor
        lr: 0.01

pred_sys:
  steps:
    - _target_: src.modules.scoring.minigrid_accuracy.MinigridAccuracy
      accuarcy_calc: ${model.train_sys.steps[0].accuracy}
    
    # - _target_: src.modules.scoring.minigrid_environments.MinigridEnvironmentsPDF
    
    - _target_: src.modules.scoring.minigrid_sample_eval_image.MinigridSampleEvalImage
      eval_n_grids: 5
      only_errors: true

    - _target_: src.modules.scoring.minigrid_attention_eval.MinigridAttentionEval
      eval_n_correct: 50
      eval_n_incorrect: 50